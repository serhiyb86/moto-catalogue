name: Build
on:
  workflow_dispatch: {}
  pull_request:
    paths-ignore: [ 'doc/**' ]
  push:
    branches: [ 'main', 'master', 'release/**', 'bugfix/**', 'documentation/**' ]
    paths-ignore: [ 'doc/**' ]
jobs:
  unit-test:
    name: "Backend Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Set up Java 21
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Set execute permissions for gradlew
        shell: bash
        run: chmod +x ./gradlew
      - name: Run tests
        shell: bash
        run: |
          echo "Hello world" 
          ./gradlew test 
          ls
  # Build and push docker image
  docker-build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs:
      - unit-test
#      - start-analysis-runner
#      - sonar
    steps:
      - uses: actions/checkout@v4
        name: 'Checkout Code'
        with:
          fetch-depth: 0
      - name: 'Define image tag'
        shell: bash
        env:
          HEAD_REF: ${{ github.head_ref }}
        run: |
          TAG=$(.github/tools/get-image-tag.sh "$HEAD_REF")
          echo "TAG=$TAG" >> "$GITHUB_ENV"
          echo "TAG=$TAG"
      - uses: ./.github/action/build-docker
        name: 'Build and push docker image'
        with:
          image-tag: ${{ env.TAG }}
          registry: docker.io
          docker-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker-password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    # Deploy on Remote Server using SSH
  deploy:
    runs-on: ubuntu-latest
    needs:
      - docker-build
    steps:
      - name: Deploy on Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "Pulling latest image from Docker Hub..."
    # todo tag dynamically
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/catalogue:master 

            echo "Stopping existing containers..."
            docker-compose -f /home/serhii/docker/docker-compose.yml down

            echo "Starting containers with the new image..."
            docker-compose -f /home/serhii/docker/docker-compose.yml up -d

