name: 'Build and publish docker image'
description: 'Build and publish docker image of archive with the name <version>-<ticket>-<type>'
inputs:
  access-key:
    required: true
    description: "Access Key for AWS to login into ECR"
  secret-key:
    required: true
    description: "Secret Key for AWS to login into ECR"
  image-tag:
    description: 'Image tag to set'
    required: true
  registry:
    description: "Account where the ECR repository is located"
    required: true
runs:
  using: "composite"
  steps:
    - name: 'Setup Java'
      uses: ./.github/action/setup-java
      with:
        aws-access-key-id: ${{ inputs.access-key }}
        aws-secret-access-key: ${{ inputs.secret-key }}
    - name: 'Login to Amazon ECR'
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2.0.1
      with:
        registries: ${{ inputs.registry }}
    - name: 'Set up dependencies Buildx'
      uses: docker/setup-buildx-action@v3.3.0
      with:
        version: latest
        platforms: linux/amd64,linux/arm64
    - name: 'Build, tag, and push docker image to Amazon ECR Oracle Variant'
      if: ${{ !startsWith(inputs.branch, 'documentation') }}
      shell: bash
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ inputs.image-tag }}-oracle
        QUARKUS_DOCKER_BUILDX_PLATFORM: linux/amd64,linux/arm64
      run: |
        ./gradlew build -PdatabaseVendor=oracle -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.registry=$REGISTRY \
          -Dquarkus.container-image.group=archive \
          -Dquarkus.container-image.name=archive \
          -Dquarkus.container-image.tag=$IMAGE_TAG \
          -x test -x quarkusIntTest -x testNative
    - name: 'Build, tag, and push docker image to Amazon ECR PostgreSQL Variant'
      if: ${{ !startsWith(inputs.branch, 'documentation') }}
      shell: bash
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ inputs.image-tag }}-postgresql
        QUARKUS_DOCKER_BUILDX_PLATFORM: linux/amd64,linux/arm64
      run: |
        ./gradlew build -PdatabaseVendor=postgresql -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.registry=$REGISTRY \
          -Dquarkus.container-image.group=archive \
          -Dquarkus.container-image.name=archive \
          -Dquarkus.container-image.tag=$IMAGE_TAG \
          -x test -x quarkusIntTest -x testNative
    - name: 'Build, tag, and push docker image to Amazon ECR MSSQL Variant'
      if: ${{ !startsWith(inputs.branch, 'documentation') }}
      shell: bash
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ inputs.image-tag }}-mssql
        QUARKUS_DOCKER_BUILDX_PLATFORM: linux/amd64,linux/arm64
      run: |
        ./gradlew build -PdatabaseVendor=mssql -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.registry=$REGISTRY \
          -Dquarkus.container-image.group=archive \
          -Dquarkus.container-image.name=archive \
          -Dquarkus.container-image.tag=$IMAGE_TAG \
          -x test -x quarkusIntTest -x testNative